{"ast":null,"code":"var _jsxFileName = \"/home/chang/TIL/nwitter/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this) : \"init...\", /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"\\xA9 \", new Date().getFullYear(), \" Nwitter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"+8UWPZeDHvBWUbvjuGH9aya/3CQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AppRouter","authService","App","init","setInit","isLoggedIn","setIsLoggedIn","userObj","setUserObj","onAuthStateChanged","user","Date","getFullYear"],"sources":["/home/chang/TIL/nwitter/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) =>{\n      if(user){\n        setIsLoggedIn(true);\n      }\n      else{\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"init...\"}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EACAC,SAAS,CAAC,MAAM;IACdE,WAAW,CAACQ,kBAAZ,CAAgCC,IAAD,IAAS;MACtC,IAAGA,IAAH,EAAQ;QACNJ,aAAa,CAAC,IAAD,CAAb;MACD,CAFD,MAGI;QACFA,aAAa,CAAC,KAAD,CAAb;MACD;;MACDF,OAAO,CAAC,IAAD,CAAP;IACD,CARD;EASD,CAVQ,EAUN,EAVM,CAAT;EAWA,oBACE;IAAA,WACGD,IAAI,gBAAG,QAAC,SAAD;MAAW,UAAU,EAAEE;IAAvB;MAAA;MAAA;MAAA;IAAA,QAAH,GAA2C,SADlD,eAEE;MAAA,oBAAgB,IAAIM,IAAJ,GAAWC,WAAX,EAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GArBQV,G;;KAAAA,G;AAuBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}